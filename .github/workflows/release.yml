name: CI/CD for ESP32

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install ESP-IDF
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://dl.espressif.com/dl/esp-idf/releases/esp-idf-v4.2.zip
        unzip esp-idf-v4.2.zip
        ./esp-idf/install.sh
        echo "source $(pwd)/esp-idf/export.sh" >> $GITHUB_ENV

    - name: Cache ESP-IDF dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.espressif
          ~/esp
        key: ${{ runner.os }}-esp-idf-${{ hashFiles('**/idf_requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-esp-idf-

    - name: Install ESP32 dependencies
      run: |
        sudo apt-get install -y gcc make flex bison gperf python3 python3-pip python3-setuptools python3-serial python3-click python3-pyparsing python3-cryptography python3-future python3-pyelftools cmake ninja-build ccache libffi-dev libssl-dev dfu-util
        pip3 install esptool

    - name: Build firmware
      run: |
        source $GITHUB_ENV
        idf.py build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Sync built firmware to S3
      uses: aws-actions/s3-sync-action@v3
      with:
        source-dir: build/
        destination-bucket: ${{ secrets.S3_BUCKET }}
        destination-prefix: firmware/

    - name: Notify MQTT broker
      run: |
        pip3 install paho-mqtt
        python3 notify_mqtt.py
